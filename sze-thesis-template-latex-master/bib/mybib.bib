@article{braden1986surveyor,
  title     = {The surveyor's area formula},
  author    = {Braden, Bart},
  journal   = {The College Mathematics Journal},
  volume    = {17},
  number    = {4},
  pages     = {326--337},
  year      = {1986},
  publisher = {Taylor \& Francis}
}

@article{canny_edge_detection,
  author  = {Canny, John},
  journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
  title   = {A Computational Approach to Edge Detection},
  year    = {1986},
  volume  = {PAMI-8},
  number  = {6},
  pages   = {679-698},
  doi     = {10.1109/TPAMI.1986.4767851}
}

@misc{cv2_bitwise_and,
  key       = {OpenCV Bitwise AND},
  title     = {{OpenCV} bitwise and},
  url       = {https://docs.opencv.org/3.4/d2/de8/group__core__array.html#ga60b4d04b251ba5eb1392c34425497e14},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_canny,
  key       = {OpenCV Canny},
  title     = {{OpenCV} canny edge detection},
  url       = {https://docs.opencv.org/3.4/dd/d1a/group__imgproc__feature.html#ga04723e007ed888ddf11d9ba04e2232de},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_contour_area,
  key       = {OpenCV Contour Area},
  title     = {{OpenCV} contour area},
  url       = {https://docs.opencv.org/3.4/d3/dc0/group__imgproc__shape.html#ga2c759ed9f497d4a618048a2f56dc97f1},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_convex_hull,
  key       = {OpenCV Convex Hull},
  title     = {{OpenCV} convex hull},
  url       = {https://docs.opencv.org/3.4/d3/dc0/group__imgproc__shape.html#ga014b28e56cb8854c0de4a211cb2be656},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_cvt_color,
  key       = {OpenCV Color Conversion},
  title     = {{OpenCV} color conversion},
  url       = {https://docs.opencv.org/3.4/d8/d01/group__imgproc__color__conversions.html#ga397ae87e1288a81d2363b61574eb8cab},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_find_contours,
  key       = {OpenCV Find Contours},
  title     = {{OpenCV} find contours},
  url       = {https://docs.opencv.org/3.4/d3/dc0/group__imgproc__shape.html#ga17ed9f5d79ae97bd4c7cf18403e1689a},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_in_range,
  key       = {OpenCV Masking},
  title     = {{OpenCV} masking},
  url       = {https://docs.opencv.org/3.4/d2/de8/group__core__array.html#ga48af0ab51e36436c5d04340e036ce981},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{cv2_threshold,
  key       = {OpenCV Threshold},
  title     = {{OpenCV} threshold},
  url       = {https://docs.opencv.org/3.4/d7/d1b/group__imgproc__misc.html#gae8a4a146d1ca78c626a53577199e9c57},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{flyordie,
  key       = {FlyOrDie},
  title     = {Snooker játék},
  url       = {http://www.flyordie.hu/snooker/},
  journal   = {Snooker – Online Snooker játék},
  publisher = {Solware Kft.}
}

@article{hough_transform,
  author     = {Duda, Richard O. and Hart, Peter E.},
  title      = {Use of the Hough Transformation to Detect Lines and Curves in Pictures},
  year       = {1972},
  issue_date = {Jan. 1972},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {15},
  number     = {1},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/361237.361242},
  doi        = {10.1145/361237.361242},
  abstract   = {Hough has proposed an interesting and computationally efficient procedure for detecting lines in pictures. This paper points out that the use of angle-radius rather than slope-intercept parameters simplifies the computation further. It also shows how the method can be used for more general curve fitting, and gives alternative interpretations that explain the source of its efficiency.},
  journal    = {Commun. ACM},
  month      = {jan},
  pages      = {11–15},
  numpages   = {5},
  keywords   = {curve detection, colinear points, point-line transformation, Hough transformation, picture processing, pattern recognition, line detection}
}

@misc{opencv_2020,
  key     = {OpenCV},
  title   = {{OpenCV} about},
  url     = {https://opencv.org/about/},
  journal = {OpenCV},
  year    = {2020},
  month   = {Nov}
}

@book{shamos2002new,
  title     = {The New Illustrated Encyclopedia of Billiards},
  author    = {Shamos, M.I.},
  isbn      = {9781585746859},
  lccn      = {99088256},
  series    = {G - Reference, Information and Interdisciplinary Subjects Series},
  url       = {https://books.google.hu/books?id=BO2BAAAAMAAJ},
  year      = {2002},
  publisher = {Lyons Press}
}

@book{shapiro2001,
  added-at  = {2009-02-25T00:40:10.000+0100},
  address   = {Upper Saddle River, NJ, USA},
  author    = {Stockman, George and Shapiro, Linda G.},
  biburl    = {https://www.bibsonomy.org/bibtex/28cbeb1b8a9683e50d56c23c4ca785aae/omarques},
  interhash = {55ed4617551e367c4ee4a45e4b7c7912},
  intrahash = {8cbeb1b8a9683e50d56c23c4ca785aae},
  isbn      = {0130307963},
  keywords  = {imported},
  publisher = {Prentice Hall PTR},
  timestamp = {2009-02-25T00:41:06.000+0100},
  title     = {Computer Vision},
  year      = 2001,
  pages     = 166
}

@article{SKLANSKY198279,
  title    = {Finding the convex hull of a simple polygon},
  journal  = {Pattern Recognition Letters},
  volume   = {1},
  number   = {2},
  pages    = {79-83},
  year     = {1982},
  issn     = {0167-8655},
  doi      = {https://doi.org/10.1016/0167-8655(82)90016-2},
  url      = {https://www.sciencedirect.com/science/article/pii/0167865582900162},
  author   = {Jack Sklansky},
  keywords = {Pattern recognition, computational geometry, convex hull, simple polygon, algorithmic complexity},
  abstract = {We describe a new algorithm for finding the convex hull of any simple polygon specified by a sequence of m vertices. An earlier convex hull finder of ours is limited to polygons which remain simple (i.e., nonselfintersecting) when locally non-convex vertices are removed. In this paper we amend our earlier algorithm so that it finds with complexity O(m) the convex hull of any simple polygon, while retaining much of the simplicity of the earlier algorithm.}
}

@manual{snooker_rules,
  author    = {WPBSA},
  publisher = {The World Professional Billiards \& Snooker Association Limited},
  title     = {Official Rules of the Games of Snooker and English Billiards},
  year      = {2019},
  url       = {https://wpbsa.com/wp-content/uploads/WPBSA-Official-Rules-of-the-Games-of-Snooker-and-Billiards-2020.pdf}
}

@article{SUZUKI198532,
  title    = {Topological structural analysis of digitized binary images by border following},
  journal  = {Computer Vision, Graphics, and Image Processing},
  volume   = {30},
  number   = {1},
  pages    = {32-46},
  year     = {1985},
  issn     = {0734-189X},
  doi      = {https://doi.org/10.1016/0734-189X(85)90016-7},
  url      = {https://www.sciencedirect.com/science/article/pii/0734189X85900167},
  author   = {Satoshi Suzuki and KeiichiA be},
  abstract = {Two border following algorithms are proposed for the topological analysis of digitized binary images. The first one determines the surroundness relations among the borders of a binary image. Since the outer borders and the hole borders have a one-to-one correspondence to the connected components of 1-pixels and to the holes, respectively, the proposed algorithm yields a representation of a binary image, from which one can extract some sort of features without reconstructing the image. The second algorithm, which is a modified version of the first, follows only the outermost borders (i.e., the outer borders which are not surrounded by holes). These algorithms can be effectively used in component counting, shrinking, and topological structural analysis of binary images, when a sequential digital computer is used.}
}

@misc{template_match,
  key       = {OpenCV Template Match},
  title     = {{OpenCV} Correlation Template Matching {(CCORR)}},
  url       = {https://docs.opencv.org/3.4/df/dfb/group__imgproc__object.html#gga3a7850640f1fe1f58fe91a2d7583695daf9c3ab9296f597ea71f056399a5831da},
  journal   = {OpenCV Documentation},
  publisher = {OpenCV}
}

@misc{tensorflow,
  key     = {TensorFlow},
  title   = {{TensorFlow}},
  url     = {https://www.tensorflow.org/},
  journal = {TensorFlow},
  year    = {2020},
  month   = {Nov}
}

@article{YUEN199071,
  title    = {Comparative study of Hough Transform methods for circle finding},
  journal  = {Image and Vision Computing},
  volume   = {8},
  number   = {1},
  pages    = {71-77},
  year     = {1990},
  issn     = {0262-8856},
  doi      = {https://doi.org/10.1016/0262-8856(90)90059-E},
  url      = {https://www.sciencedirect.com/science/article/pii/026288569090059E},
  author   = {HK Yuen and J Princen and J Illingworth and J Kittler},
  keywords = {Hough Transform methods, circle detection, performance},
  abstract = {A variety of circle detection methods which are based on variations of the Hough Transform are investigated. The five methods considered are the standard Hough Transform, the Fast Hough Transform of Li et al.1, a two stage Hough method, and two space saving approaches based on the method devised by Gerig and Klein2. The performance of each of the methods has been compared on synthetic imagery and real images from a metallurgical application. Figures and comments are presented concerning the accuracy, reliability, computational efficiency and storage requirements of each of the methods.}
}